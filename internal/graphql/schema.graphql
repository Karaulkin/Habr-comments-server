type User {
    id: ID!
    username: String!
}

type Post {
    id: ID!
    author: User!
    title: String!
    content: String!
    allowComments: Boolean!
    createdAt: String!
    comments(limit: Int, offset: Int): [Comment!]! # Корневые комментарии с пагинацией
}

type Comment {
    id: ID!
    post: Post!
    author: User!
    parent: Comment
    content: String!
    createdAt: String!
    children(limit: Int, offset: Int): [Comment!]! # Дочерние комментарии с пагинацией
}

type Query {
    posts(limit: Int, offset: Int): [Post!]! # Получение постов с пагинацией
    post(id: ID!): Post # Получение поста по id с комментариями
    comments(parentId: ID!, limit: Int, offset: Int): [Comment!]! # Получение вложенных комментариев
}

type Mutation {
    createPost(authorId: ID!, title: String!, content: String!, allowComments: Boolean!): Post! # Добавление поста
    createComment(postId: ID!, authorId: ID!, parentId: ID, content: String!): Comment! # Добавление комментария
    blockComments(postId: ID!): Post! # Блокировка комментариев для поста
}
